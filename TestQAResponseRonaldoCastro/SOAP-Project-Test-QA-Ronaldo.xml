<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="59b5049d-a866-4072-8f57-4b6a1f31d2ed" created="3.1.0" activeEnvironment="Default environment" name="SOAPTest" updated="3.1.0 2020-02-04T16:09:20Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="0c55dfeb-a684-4187-9e10-91cc5cbc7d97" wsaVersion="NONE" name="EmployeeManagementServiceSoap12Binding" type="wsdl" bindingName="{http://sample.com/reservation/guest}EmployeeManagementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="http://216.10.245.166:8080/axis2/services/EmployeeManagementService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://216.10.245.166:8080/axis2/services/EmployeeManagementService?wsdl"><con:part><con:url>http://216.10.245.166:8080/axis2/services/EmployeeManagementService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://sample.com/reservation/guest" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://sample.com/reservation/guest/types" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://sample.com/reservation/guest" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax21="http://exception.reservation.sample.com/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EmployeeManagementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.reservation.sample.com/xsd">
      <xs:complexType name="EmployeeManagementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://sample.com/reservation/guest/types" xmlns:ax22="http://exception.reservation.sample.com/xsd">
      <xs:import namespace="http://exception.reservation.sample.com/xsd"/>
      <xs:element name="EmployeeManagementServiceEmployeeManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EmployeeManagementException" nillable="true" type="ax22:EmployeeManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEmployeeDetails">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="employeeName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEmployeeDetailsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ns:Employee"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Employee">
        <xs:sequence>
          <xs:element minOccurs="0" name="age" type="xs:int"/>
          <xs:element minOccurs="0" name="department" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="deleteEmployee">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="employeeName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addEmployee">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="Department" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="age" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addEmployeeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEmployeeDetailsRequest">
    <wsdl:part name="parameters" element="ns:getEmployeeDetails"/>
  </wsdl:message>
  <wsdl:message name="getEmployeeDetailsResponse">
    <wsdl:part name="parameters" element="ns:getEmployeeDetailsResponse"/>
  </wsdl:message>
  <wsdl:message name="EmployeeManagementServiceEmployeeManagementException">
    <wsdl:part name="parameters" element="ns:EmployeeManagementServiceEmployeeManagementException"/>
  </wsdl:message>
  <wsdl:message name="deleteEmployeeRequest">
    <wsdl:part name="parameters" element="ns:deleteEmployee"/>
  </wsdl:message>
  <wsdl:message name="addEmployeeRequest">
    <wsdl:part name="parameters" element="ns:addEmployee"/>
  </wsdl:message>
  <wsdl:message name="addEmployeeResponse">
    <wsdl:part name="parameters" element="ns:addEmployeeResponse"/>
  </wsdl:message>
  <wsdl:portType name="EmployeeManagementServicePortType">
    <wsdl:operation name="getEmployeeDetails">
      <wsdl:input message="tns:getEmployeeDetailsRequest" wsaw:Action="urn:getEmployeeDetails"/>
      <wsdl:output message="tns:getEmployeeDetailsResponse" wsaw:Action="urn:getEmployeeDetailsResponse"/>
      <wsdl:fault message="tns:EmployeeManagementServiceEmployeeManagementException" name="EmployeeManagementServiceEmployeeManagementException" wsaw:Action="urn:getEmployeeDetailsEmployeeManagementServiceEmployeeManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteEmployee">
      <wsdl:input message="tns:deleteEmployeeRequest" wsaw:Action="urn:deleteEmployee"/>
      <wsdl:fault message="tns:EmployeeManagementServiceEmployeeManagementException" name="EmployeeManagementServiceEmployeeManagementException" wsaw:Action="urn:deleteEmployeeEmployeeManagementServiceEmployeeManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addEmployee">
      <wsdl:input message="tns:addEmployeeRequest" wsaw:Action="urn:addEmployee"/>
      <wsdl:output message="tns:addEmployeeResponse" wsaw:Action="urn:addEmployeeResponse"/>
      <wsdl:fault message="tns:EmployeeManagementServiceEmployeeManagementException" name="EmployeeManagementServiceEmployeeManagementException" wsaw:Action="urn:addEmployeeEmployeeManagementServiceEmployeeManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EmployeeManagementServiceSoap11Binding" type="tns:EmployeeManagementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEmployeeDetails">
      <soap:operation soapAction="urn:getEmployeeDetails" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EmployeeManagementServiceEmployeeManagementException">
        <soap:fault use="literal" name="EmployeeManagementServiceEmployeeManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEmployee">
      <soap:operation soapAction="urn:deleteEmployee" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="EmployeeManagementServiceEmployeeManagementException">
        <soap:fault use="literal" name="EmployeeManagementServiceEmployeeManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEmployee">
      <soap:operation soapAction="urn:addEmployee" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EmployeeManagementServiceEmployeeManagementException">
        <soap:fault use="literal" name="EmployeeManagementServiceEmployeeManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EmployeeManagementServiceSoap12Binding" type="tns:EmployeeManagementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEmployeeDetails">
      <soap12:operation soapAction="urn:getEmployeeDetails" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EmployeeManagementServiceEmployeeManagementException">
        <soap12:fault use="literal" name="EmployeeManagementServiceEmployeeManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEmployee">
      <soap12:operation soapAction="urn:deleteEmployee" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="EmployeeManagementServiceEmployeeManagementException">
        <soap12:fault use="literal" name="EmployeeManagementServiceEmployeeManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEmployee">
      <soap12:operation soapAction="urn:addEmployee" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EmployeeManagementServiceEmployeeManagementException">
        <soap12:fault use="literal" name="EmployeeManagementServiceEmployeeManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EmployeeManagementServiceHttpBinding" type="tns:EmployeeManagementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEmployeeDetails">
      <http:operation location="getEmployeeDetails"/>
      <wsdl:input>
        <mime:content type="application/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="application/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteEmployee">
      <http:operation location="deleteEmployee"/>
      <wsdl:input>
        <mime:content type="application/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addEmployee">
      <http:operation location="addEmployee"/>
      <wsdl:input>
        <mime:content type="application/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="application/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EmployeeManagementService">
    <wsdl:port name="EmployeeManagementServiceHttpSoap11Endpoint" binding="tns:EmployeeManagementServiceSoap11Binding">
      <soap:address location="http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EmployeeManagementServiceHttpSoap12Endpoint" binding="tns:EmployeeManagementServiceSoap12Binding">
      <soap12:address location="http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EmployeeManagementServiceHttpEndpoint" binding="tns:EmployeeManagementServiceHttpBinding">
      <http:address location="http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="bd52762b-7dfb-4fef-95cb-327bbde88377" isOneWay="false" action="urn:addEmployee" name="addEmployee" bindingOperationName="addEmployee" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9fa7add9-9aa4-43b7-99f1-1a457d74de5e" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://sample.com/reservation/guest/types">
   <soap:Header/>
   <soap:Body>
      <typ:addEmployee>
         <!--Optional:-->
         <typ:name>ronaldo</typ:name>
         <!--Optional:-->
         <typ:id>267594937</typ:id>
         <!--Optional:-->
         <typ:Department>lv</typ:Department>
         <!--Optional:-->
         <typ:age>34</typ:age>
      </typ:addEmployee>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:addEmployee"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ca1a2174-f938-4504-a2e4-f8f81d2b30ef" isOneWay="false" action="urn:deleteEmployee" name="deleteEmployee" bindingOperationName="deleteEmployee" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dcd5612e-ce55-4541-94f4-c62b331361b3" isOneWay="false" action="urn:getEmployeeDetails" name="getEmployeeDetails" bindingOperationName="getEmployeeDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="513865c2-5889-4fc0-9a3d-995e6f53547f" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://sample.com/reservation/guest/types">
   <soap:Header/>
   <soap:Body>
      <typ:getEmployeeDetails>
         <!--Optional:-->
         <typ:employeeName>ronaldo</typ:employeeName>
      </typ:getEmployeeDetails>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:getEmployeeDetails"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b9c769cc-bfc9-4182-8757-be204e91852f" wsaVersion="NONE" name="EmployeeManagementServiceSoap11Binding" type="wsdl" bindingName="{http://sample.com/reservation/guest}EmployeeManagementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="http://216.10.245.166:8080/axis2/services/EmployeeManagementService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="82130dcf-9304-4eed-bbba-f1aca0d0fc84" isOneWay="false" action="urn:addEmployee" name="addEmployee" bindingOperationName="addEmployee" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="523fae0e-48b3-47c2-b298-3da924c25266" isOneWay="false" action="urn:deleteEmployee" name="deleteEmployee" bindingOperationName="deleteEmployee" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5fd085f-d4fb-4bb3-ad77-c2b243e3d755" isOneWay="false" action="urn:getEmployeeDetails" name="getEmployeeDetails" bindingOperationName="getEmployeeDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="76c50757-c28a-400d-8fea-382a49f205a5" name="TestSuite1"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="0a2d6571-0c36-4017-b1ef-5a04f83030a8" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase1" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="ec9eda92-c616-4b59-8e9d-72b4d88eed5d" name="ADDEmployee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EmployeeManagementServiceSoap12Binding</con:interface><con:operation>addEmployee</con:operation><con:request name="ADDEmployee" id="d124f1c9-1d92-48e1-afad-d3fdf00810e1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://sample.com/reservation/guest/types">
   <soap:Header/>
   <soap:Body>
      <typ:addEmployee>
         <!--Optional:-->
         <typ:name>Gerardo4</typ:name>
         <!--Optional:-->
         <typ:id>1</typ:id>
         <!--Optional:-->
         <typ:Department>lv</typ:Department>
         <!--Optional:-->
         <typ:age>50</typ:age>
      </typ:addEmployee>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="8fd57400-4fc4-48c5-8001-6287500c26fd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="65a26b05-ffc8-48c3-a944-b307978509be" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="c6e41d98-f52f-4852-9bce-2b2adb3a1a6a" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="urn:addEmployee" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="ManageEmployee" id="afc023c8-1275-47a4-98da-dae0060d1270"><con:settings/><con:config><script>class ManageEmployee{

 def log;
 def context;
 def testRunner;

 def ManageEmployee(log, context, testRunner){
  this.log = log
  this.context = context
  this.testRunner = testRunner
 }


 def myStatus(){
			def status = testRunner.runTestStepByName("ADDEmployee")
			def result = status.getStatus().toString();
               log.info ("   ---- "+result)
 	}

def myStatusCode(){	
			def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
			def httpResponseHeaders = context.testCase.testSteps["ADDEmployee"].testRequest.response.responseHeaders
			def httpStatus = httpResponseHeaders["#status#"]
			log.info("HTTP status code: " +httpStatus )
	}
 
}

context.setProperty("ManageEmployee", new ManageEmployee(log,context,testRunner))
</script></con:config></con:testStep><con:testStep type="groovy" name="CallManageEmployee" id="985a5a1a-c371-4940-958a-de56263f2a2d"><con:settings/><con:config><script>def testStep = testRunner.testCase.getTestStepByName("ManageEmployee")
testStep.run(testRunner, context)

context.ManageEmployee.myStatus()
context.ManageEmployee.myStatusCode()
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="de47e212-fd01-43cc-8860-83fa975d67d0" name="TestSuite2"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>PARALLELL</con:runType><con:testCase id="ac862793-10e3-45ee-bfaf-5968d7d1ce73" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="MyAssertions" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" id="ded81d5b-f379-4635-85e0-ae97c890f51b" name="AddEmployee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EmployeeManagementServiceSoap12Binding</con:interface><con:operation>addEmployee</con:operation><con:request name="AddEmployee" id="4643fa20-ca54-4fde-a2db-160279bb6194"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://sample.com/reservation/guest/types">
   <soap:Header/>
   <soap:Body>
      <typ:addEmployee>
         <!--Optional:-->
         <typ:name>ronaldo7</typ:name>
         <!--Optional:-->
         <typ:id>267594937</typ:id>
         <!--Optional:-->
         <typ:Department>609</typ:Department>
         <!--Optional:-->
         <typ:age>34</typ:age>
      </typ:addEmployee>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="1466af9d-8420-43d4-89ae-eecf76322ba1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="1de26bb2-53fe-4e9f-9740-0341880fabfd" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="834a8848-b091-403b-8187-c87e00b95766" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="f2074500-f6f7-4dde-bd7c-cf00cfbfbe59" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="eb30a373-0bc0-4fd8-bb01-285c9d378d3f" name="Assertion_StatusCode"><con:configuration><scriptText>def headers =  messageExchange.getResponseHeaders()
log.info headers["#status#"]
assert ['HTTP/1.1 200 OK'] == headers["#status#"]</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e197364d-4aae-4c4e-8df8-45ea9b724f30" name="Assertion_TimeTaken"><con:configuration><scriptText>assert messageExchange.timeTaken  &lt; 4000</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a2a85064-581c-480d-8b54-860444747096" name="Assertion_AgeIsNumber"><con:configuration><scriptText>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requestHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )

def age = requestHolder.getNodeValue("//typ:age")
assert age ==~ /\d+/ </scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="urn:addEmployee" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0cea2eb7-77df-4f2f-aa18-87f5cf319b85" name="DeleteEmployee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EmployeeManagementServiceSoap12Binding</con:interface><con:operation>deleteEmployee</con:operation><con:request name="DeleteEmployee" id="c580df5d-0407-4056-a44c-a198c82ef847"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://sample.com/reservation/guest/types">
   <soap:Header/>
   <soap:Body>
      <typ:deleteEmployee>
         <!--Optional:-->
         <typ:employeeName>ronaldo6</typ:employeeName>
      </typ:deleteEmployee>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Response SLA Assertion" id="8fe80f6e-b306-479d-8075-b08a0a535dcc" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="a1069439-d79a-4aec-931c-727ec8b8b143" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="4f64c9e9-8bb7-4609-8523-ea63a0cca003" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="582c74e9-00f1-4c6f-a82b-5cd5ebeb3d84" name="Assertion_Endpoint"><con:configuration><scriptText>// http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/
 //log.info messageExchange.getEndpoint() 

 def endpoint = messageExchange.getEndpoint() 
 assert  endpoint == "http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/"</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="urn:deleteEmployee" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="19a0b8e7-1415-4a73-9751-5c00e149c42e" name="EmployeeDetails"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EmployeeManagementServiceSoap12Binding</con:interface><con:operation>getEmployeeDetails</con:operation><con:request name="EmployeeDetails" id="fc883ab1-5d00-4199-a82d-e2ecc2d89a37"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://216.10.245.166:8080/axis2/services/EmployeeManagementService.EmployeeManagementServiceHttpSoap12Endpoint/</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://sample.com/reservation/guest/types">
   <soap:Header/>
   <soap:Body>
      <typ:getEmployeeDetails>
         <!--Optional:-->
         <typ:employeeName>ronaldo2</typ:employeeName>
      </typ:getEmployeeDetails>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="15fa37fc-de21-43a8-9c70-09f4fa2ef5c4" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="f998865e-0787-4b9e-893e-94d364485173" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="4b6a7a07-08f6-429f-b473-b51c4ff73295" name="Not SOAP Fault"/><con:assertion type="Schema Compliance" id="44f3f087-2903-481d-ab03-2d570f925968" name="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="b4314bfb-c0ab-4f1f-b0fc-335b7cdd4da7" name="Assertion_Attachment"><con:configuration><scriptText>log.info (messageExchange.responseAttachments.length)
assert messageExchange.responseAttachments.length == 0
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b505f363-3f2c-43e8-9676-beb4ec3cc8f4" name="Assertion_GetName"><con:configuration><scriptText>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requestHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )

def name = responseHolder.getNodeValue("//ns:name")
assert name == 'ronaldo2'</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="93952227-4b6a-445d-9d72-a97955ec2443" name="Assertion_Contains"><con:configuration><scriptText>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requestHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )

def department = responseHolder.getNodeValue("//ns:department")
assert department .contains('10')

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig action="urn:getEmployeeDetails" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>